syntax = "proto3";

package protocol;

option go_package = "../protocol";

enum ErrCode {
    NO_ERR = 0;
    META_SERVER_DOWN_ERR = 1;
    FILE_EXISTS_ERR = 2;
    FILE_DOWNLOAD_ERR = 3;
    WRONG_LEADER_ERR = 4;
    MARSHAL_SERVER_GROUP_META_REQ_ERR = 5;
    RPC_CALL_TIMEOUT_ERR = 6;
    PUT_BUCKET_TO_ENG_ERR = 7;
    DEL_BUCKET_FROM_ENG_ERR = 8;
    APPLY_JOIN_TODO_TO_STM_ERR = 9;
    APPLY_QUERY_TOPO_CONF_ERR = 10;
    APPLY_LEAVE_TODO_TO_STM_ERR = 11;
    PUT_OBJECT_META_TO_ENG_ERR = 12;
    GET_OBJECT_META_FROM_ENG_ERR = 13;
    WRITE_FILE_BLOCK_ERR = 14;
    READ_FILE_BLOCK_ERR = 15;
    KEY_NOT_EXISTS_ERR = 16;
    WRITE_TO_DB_ERR = 17;
    UNEXPECT_ERR = 18;
}

enum ConfigServerGroupMetaOpType {
   OP_SERVER_GROUP_JOIN = 0;
   OP_SERVER_GROUP_LEAVE = 1;
   OP_SERVER_GROUP_QUERY = 2;
   OP_OSS_BUCKET_ADD = 3;
   OP_OSS_BUCKET_DEL = 4;
   OP_OSS_BUCKET_LIST = 5;
   OP_OSS_OBJECT_PUT = 6;
   OP_OSS_OBJECT_GET = 7;
   OP_OSS_OBJECT_LIST = 8;
}

message ServerGroupMetaConfigRequest {
   map<int64, string> server_groups = 1; 
   repeated int64 gids = 2;
   int64 config_version = 3;
   ConfigServerGroupMetaOpType op_type = 4;
}

message ServerGroupMetas {
    int64 config_version = 1;
    repeated int64 slots = 2;
    map<int64, string> server_groups = 3;
}

message ServerGroupMetaConfigResponse {
    ErrCode err_code = 1;
    ServerGroupMetas server_group_metas = 2;
    int64 leader_id = 3;
}

// for meta service
service MetaService {
    // for multi-raft server group config manage
    rpc ServerGroupMeta (ServerGroupMetaConfigRequest) returns (ServerGroupMetaConfigResponse);
}

// op type for ekvserver
enum OpType {
  OP_PUT = 0;
  OP_APPEND = 1;
  OP_GET = 2;
  OP_SCAN = 3;
}

message EkvCommandRequest {
  string key = 1;
  string val = 2;
  OpType op_type = 3;
  string cmd_token = 4;
  int64  client_id = 5;
  bytes  context = 6;
}

message EkvCommandResponse {
  string val = 1;
  int64  leader_id = 2;
  int64  err_code = 3;
}

service EkvService {
  rpc DoCommand (EkvCommandRequest) returns (EkvCommandResponse);
}
