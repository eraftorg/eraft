// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.19.4
// source: wellwood.proto

package protocol

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ErrCode int32

const (
	ErrCode_NO_ERR                            ErrCode = 0
	ErrCode_META_SERVER_DOWN_ERR              ErrCode = 1
	ErrCode_FILE_EXISTS_ERR                   ErrCode = 2
	ErrCode_FILE_DOWNLOAD_ERR                 ErrCode = 3
	ErrCode_WRONG_LEADER_ERR                  ErrCode = 4
	ErrCode_MARSHAL_SERVER_GROUP_META_REQ_ERR ErrCode = 5
	ErrCode_RPC_CALL_TIMEOUT_ERR              ErrCode = 6
	ErrCode_PUT_BUCKET_TO_ENG_ERR             ErrCode = 7
	ErrCode_DEL_BUCKET_FROM_ENG_ERR           ErrCode = 8
	ErrCode_APPLY_JOIN_TODO_TO_STM_ERR        ErrCode = 9
	ErrCode_APPLY_QUERY_TOPO_CONF_ERR         ErrCode = 10
	ErrCode_APPLY_LEAVE_TODO_TO_STM_ERR       ErrCode = 11
	ErrCode_PUT_OBJECT_META_TO_ENG_ERR        ErrCode = 12
	ErrCode_GET_OBJECT_META_FROM_ENG_ERR      ErrCode = 13
	ErrCode_WRITE_FILE_BLOCK_ERR              ErrCode = 14
	ErrCode_READ_FILE_BLOCK_ERR               ErrCode = 15
	ErrCode_KEY_NOT_EXISTS_ERR                ErrCode = 16
	ErrCode_WRITE_TO_DB_ERR                   ErrCode = 17
	ErrCode_UNEXPECT_ERR                      ErrCode = 18
)

// Enum value maps for ErrCode.
var (
	ErrCode_name = map[int32]string{
		0:  "NO_ERR",
		1:  "META_SERVER_DOWN_ERR",
		2:  "FILE_EXISTS_ERR",
		3:  "FILE_DOWNLOAD_ERR",
		4:  "WRONG_LEADER_ERR",
		5:  "MARSHAL_SERVER_GROUP_META_REQ_ERR",
		6:  "RPC_CALL_TIMEOUT_ERR",
		7:  "PUT_BUCKET_TO_ENG_ERR",
		8:  "DEL_BUCKET_FROM_ENG_ERR",
		9:  "APPLY_JOIN_TODO_TO_STM_ERR",
		10: "APPLY_QUERY_TOPO_CONF_ERR",
		11: "APPLY_LEAVE_TODO_TO_STM_ERR",
		12: "PUT_OBJECT_META_TO_ENG_ERR",
		13: "GET_OBJECT_META_FROM_ENG_ERR",
		14: "WRITE_FILE_BLOCK_ERR",
		15: "READ_FILE_BLOCK_ERR",
		16: "KEY_NOT_EXISTS_ERR",
		17: "WRITE_TO_DB_ERR",
		18: "UNEXPECT_ERR",
	}
	ErrCode_value = map[string]int32{
		"NO_ERR":                            0,
		"META_SERVER_DOWN_ERR":              1,
		"FILE_EXISTS_ERR":                   2,
		"FILE_DOWNLOAD_ERR":                 3,
		"WRONG_LEADER_ERR":                  4,
		"MARSHAL_SERVER_GROUP_META_REQ_ERR": 5,
		"RPC_CALL_TIMEOUT_ERR":              6,
		"PUT_BUCKET_TO_ENG_ERR":             7,
		"DEL_BUCKET_FROM_ENG_ERR":           8,
		"APPLY_JOIN_TODO_TO_STM_ERR":        9,
		"APPLY_QUERY_TOPO_CONF_ERR":         10,
		"APPLY_LEAVE_TODO_TO_STM_ERR":       11,
		"PUT_OBJECT_META_TO_ENG_ERR":        12,
		"GET_OBJECT_META_FROM_ENG_ERR":      13,
		"WRITE_FILE_BLOCK_ERR":              14,
		"READ_FILE_BLOCK_ERR":               15,
		"KEY_NOT_EXISTS_ERR":                16,
		"WRITE_TO_DB_ERR":                   17,
		"UNEXPECT_ERR":                      18,
	}
)

func (x ErrCode) Enum() *ErrCode {
	p := new(ErrCode)
	*p = x
	return p
}

func (x ErrCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ErrCode) Descriptor() protoreflect.EnumDescriptor {
	return file_wellwood_proto_enumTypes[0].Descriptor()
}

func (ErrCode) Type() protoreflect.EnumType {
	return &file_wellwood_proto_enumTypes[0]
}

func (x ErrCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ErrCode.Descriptor instead.
func (ErrCode) EnumDescriptor() ([]byte, []int) {
	return file_wellwood_proto_rawDescGZIP(), []int{0}
}

type ConfigServerGroupMetaOpType int32

const (
	ConfigServerGroupMetaOpType_OP_SERVER_GROUP_JOIN  ConfigServerGroupMetaOpType = 0
	ConfigServerGroupMetaOpType_OP_SERVER_GROUP_LEAVE ConfigServerGroupMetaOpType = 1
	ConfigServerGroupMetaOpType_OP_SERVER_GROUP_QUERY ConfigServerGroupMetaOpType = 2
	ConfigServerGroupMetaOpType_OP_OSS_BUCKET_ADD     ConfigServerGroupMetaOpType = 3
	ConfigServerGroupMetaOpType_OP_OSS_BUCKET_DEL     ConfigServerGroupMetaOpType = 4
	ConfigServerGroupMetaOpType_OP_OSS_BUCKET_LIST    ConfigServerGroupMetaOpType = 5
	ConfigServerGroupMetaOpType_OP_OSS_OBJECT_PUT     ConfigServerGroupMetaOpType = 6
	ConfigServerGroupMetaOpType_OP_OSS_OBJECT_GET     ConfigServerGroupMetaOpType = 7
	ConfigServerGroupMetaOpType_OP_OSS_OBJECT_LIST    ConfigServerGroupMetaOpType = 8
)

// Enum value maps for ConfigServerGroupMetaOpType.
var (
	ConfigServerGroupMetaOpType_name = map[int32]string{
		0: "OP_SERVER_GROUP_JOIN",
		1: "OP_SERVER_GROUP_LEAVE",
		2: "OP_SERVER_GROUP_QUERY",
		3: "OP_OSS_BUCKET_ADD",
		4: "OP_OSS_BUCKET_DEL",
		5: "OP_OSS_BUCKET_LIST",
		6: "OP_OSS_OBJECT_PUT",
		7: "OP_OSS_OBJECT_GET",
		8: "OP_OSS_OBJECT_LIST",
	}
	ConfigServerGroupMetaOpType_value = map[string]int32{
		"OP_SERVER_GROUP_JOIN":  0,
		"OP_SERVER_GROUP_LEAVE": 1,
		"OP_SERVER_GROUP_QUERY": 2,
		"OP_OSS_BUCKET_ADD":     3,
		"OP_OSS_BUCKET_DEL":     4,
		"OP_OSS_BUCKET_LIST":    5,
		"OP_OSS_OBJECT_PUT":     6,
		"OP_OSS_OBJECT_GET":     7,
		"OP_OSS_OBJECT_LIST":    8,
	}
)

func (x ConfigServerGroupMetaOpType) Enum() *ConfigServerGroupMetaOpType {
	p := new(ConfigServerGroupMetaOpType)
	*p = x
	return p
}

func (x ConfigServerGroupMetaOpType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConfigServerGroupMetaOpType) Descriptor() protoreflect.EnumDescriptor {
	return file_wellwood_proto_enumTypes[1].Descriptor()
}

func (ConfigServerGroupMetaOpType) Type() protoreflect.EnumType {
	return &file_wellwood_proto_enumTypes[1]
}

func (x ConfigServerGroupMetaOpType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConfigServerGroupMetaOpType.Descriptor instead.
func (ConfigServerGroupMetaOpType) EnumDescriptor() ([]byte, []int) {
	return file_wellwood_proto_rawDescGZIP(), []int{1}
}

// op type for ekvserver
type OpType int32

const (
	OpType_OP_PUT    OpType = 0
	OpType_OP_APPEND OpType = 1
	OpType_OP_GET    OpType = 2
	OpType_OP_SCAN   OpType = 3
)

// Enum value maps for OpType.
var (
	OpType_name = map[int32]string{
		0: "OP_PUT",
		1: "OP_APPEND",
		2: "OP_GET",
		3: "OP_SCAN",
	}
	OpType_value = map[string]int32{
		"OP_PUT":    0,
		"OP_APPEND": 1,
		"OP_GET":    2,
		"OP_SCAN":   3,
	}
)

func (x OpType) Enum() *OpType {
	p := new(OpType)
	*p = x
	return p
}

func (x OpType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OpType) Descriptor() protoreflect.EnumDescriptor {
	return file_wellwood_proto_enumTypes[2].Descriptor()
}

func (OpType) Type() protoreflect.EnumType {
	return &file_wellwood_proto_enumTypes[2]
}

func (x OpType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OpType.Descriptor instead.
func (OpType) EnumDescriptor() ([]byte, []int) {
	return file_wellwood_proto_rawDescGZIP(), []int{2}
}

type ServerGroupMetaConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerGroups  map[int64]string            `protobuf:"bytes,1,rep,name=server_groups,json=serverGroups,proto3" json:"server_groups,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Gids          []int64                     `protobuf:"varint,2,rep,packed,name=gids,proto3" json:"gids,omitempty"`
	ConfigVersion int64                       `protobuf:"varint,3,opt,name=config_version,json=configVersion,proto3" json:"config_version,omitempty"`
	OpType        ConfigServerGroupMetaOpType `protobuf:"varint,4,opt,name=op_type,json=opType,proto3,enum=protocol.ConfigServerGroupMetaOpType" json:"op_type,omitempty"`
}

func (x *ServerGroupMetaConfigRequest) Reset() {
	*x = ServerGroupMetaConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wellwood_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerGroupMetaConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerGroupMetaConfigRequest) ProtoMessage() {}

func (x *ServerGroupMetaConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wellwood_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerGroupMetaConfigRequest.ProtoReflect.Descriptor instead.
func (*ServerGroupMetaConfigRequest) Descriptor() ([]byte, []int) {
	return file_wellwood_proto_rawDescGZIP(), []int{0}
}

func (x *ServerGroupMetaConfigRequest) GetServerGroups() map[int64]string {
	if x != nil {
		return x.ServerGroups
	}
	return nil
}

func (x *ServerGroupMetaConfigRequest) GetGids() []int64 {
	if x != nil {
		return x.Gids
	}
	return nil
}

func (x *ServerGroupMetaConfigRequest) GetConfigVersion() int64 {
	if x != nil {
		return x.ConfigVersion
	}
	return 0
}

func (x *ServerGroupMetaConfigRequest) GetOpType() ConfigServerGroupMetaOpType {
	if x != nil {
		return x.OpType
	}
	return ConfigServerGroupMetaOpType_OP_SERVER_GROUP_JOIN
}

type ServerGroupMetas struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfigVersion int64            `protobuf:"varint,1,opt,name=config_version,json=configVersion,proto3" json:"config_version,omitempty"`
	Slots         []int64          `protobuf:"varint,2,rep,packed,name=slots,proto3" json:"slots,omitempty"`
	ServerGroups  map[int64]string `protobuf:"bytes,3,rep,name=server_groups,json=serverGroups,proto3" json:"server_groups,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ServerGroupMetas) Reset() {
	*x = ServerGroupMetas{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wellwood_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerGroupMetas) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerGroupMetas) ProtoMessage() {}

func (x *ServerGroupMetas) ProtoReflect() protoreflect.Message {
	mi := &file_wellwood_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerGroupMetas.ProtoReflect.Descriptor instead.
func (*ServerGroupMetas) Descriptor() ([]byte, []int) {
	return file_wellwood_proto_rawDescGZIP(), []int{1}
}

func (x *ServerGroupMetas) GetConfigVersion() int64 {
	if x != nil {
		return x.ConfigVersion
	}
	return 0
}

func (x *ServerGroupMetas) GetSlots() []int64 {
	if x != nil {
		return x.Slots
	}
	return nil
}

func (x *ServerGroupMetas) GetServerGroups() map[int64]string {
	if x != nil {
		return x.ServerGroups
	}
	return nil
}

type ServerGroupMetaConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrCode          ErrCode           `protobuf:"varint,1,opt,name=err_code,json=errCode,proto3,enum=protocol.ErrCode" json:"err_code,omitempty"`
	ServerGroupMetas *ServerGroupMetas `protobuf:"bytes,2,opt,name=server_group_metas,json=serverGroupMetas,proto3" json:"server_group_metas,omitempty"`
	LeaderId         int64             `protobuf:"varint,3,opt,name=leader_id,json=leaderId,proto3" json:"leader_id,omitempty"`
}

func (x *ServerGroupMetaConfigResponse) Reset() {
	*x = ServerGroupMetaConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wellwood_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerGroupMetaConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerGroupMetaConfigResponse) ProtoMessage() {}

func (x *ServerGroupMetaConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wellwood_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerGroupMetaConfigResponse.ProtoReflect.Descriptor instead.
func (*ServerGroupMetaConfigResponse) Descriptor() ([]byte, []int) {
	return file_wellwood_proto_rawDescGZIP(), []int{2}
}

func (x *ServerGroupMetaConfigResponse) GetErrCode() ErrCode {
	if x != nil {
		return x.ErrCode
	}
	return ErrCode_NO_ERR
}

func (x *ServerGroupMetaConfigResponse) GetServerGroupMetas() *ServerGroupMetas {
	if x != nil {
		return x.ServerGroupMetas
	}
	return nil
}

func (x *ServerGroupMetaConfigResponse) GetLeaderId() int64 {
	if x != nil {
		return x.LeaderId
	}
	return 0
}

type EkvCommandRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key      string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Val      string `protobuf:"bytes,2,opt,name=val,proto3" json:"val,omitempty"`
	OpType   OpType `protobuf:"varint,3,opt,name=op_type,json=opType,proto3,enum=protocol.OpType" json:"op_type,omitempty"`
	CmdToken string `protobuf:"bytes,4,opt,name=cmd_token,json=cmdToken,proto3" json:"cmd_token,omitempty"`
	ClientId int64  `protobuf:"varint,5,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	Context  []byte `protobuf:"bytes,6,opt,name=context,proto3" json:"context,omitempty"`
}

func (x *EkvCommandRequest) Reset() {
	*x = EkvCommandRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wellwood_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EkvCommandRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EkvCommandRequest) ProtoMessage() {}

func (x *EkvCommandRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wellwood_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EkvCommandRequest.ProtoReflect.Descriptor instead.
func (*EkvCommandRequest) Descriptor() ([]byte, []int) {
	return file_wellwood_proto_rawDescGZIP(), []int{3}
}

func (x *EkvCommandRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *EkvCommandRequest) GetVal() string {
	if x != nil {
		return x.Val
	}
	return ""
}

func (x *EkvCommandRequest) GetOpType() OpType {
	if x != nil {
		return x.OpType
	}
	return OpType_OP_PUT
}

func (x *EkvCommandRequest) GetCmdToken() string {
	if x != nil {
		return x.CmdToken
	}
	return ""
}

func (x *EkvCommandRequest) GetClientId() int64 {
	if x != nil {
		return x.ClientId
	}
	return 0
}

func (x *EkvCommandRequest) GetContext() []byte {
	if x != nil {
		return x.Context
	}
	return nil
}

type EkvCommandResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Val      string `protobuf:"bytes,1,opt,name=val,proto3" json:"val,omitempty"`
	LeaderId int64  `protobuf:"varint,2,opt,name=leader_id,json=leaderId,proto3" json:"leader_id,omitempty"`
	ErrCode  int64  `protobuf:"varint,3,opt,name=err_code,json=errCode,proto3" json:"err_code,omitempty"`
}

func (x *EkvCommandResponse) Reset() {
	*x = EkvCommandResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wellwood_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EkvCommandResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EkvCommandResponse) ProtoMessage() {}

func (x *EkvCommandResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wellwood_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EkvCommandResponse.ProtoReflect.Descriptor instead.
func (*EkvCommandResponse) Descriptor() ([]byte, []int) {
	return file_wellwood_proto_rawDescGZIP(), []int{4}
}

func (x *EkvCommandResponse) GetVal() string {
	if x != nil {
		return x.Val
	}
	return ""
}

func (x *EkvCommandResponse) GetLeaderId() int64 {
	if x != nil {
		return x.LeaderId
	}
	return 0
}

func (x *EkvCommandResponse) GetErrCode() int64 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

var File_wellwood_proto protoreflect.FileDescriptor

var file_wellwood_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x77, 0x65, 0x6c, 0x6c, 0x77, 0x6f, 0x6f, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x22, 0xb9, 0x02, 0x0a, 0x1c, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x74, 0x61, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x5d, 0x0a, 0x0d, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x38, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x74, 0x61, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0c, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x69,
	0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x04, 0x67, 0x69, 0x64, 0x73, 0x12, 0x25,
	0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x3e, 0x0a, 0x07, 0x6f, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x4d, 0x65, 0x74, 0x61, 0x4f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x6f,
	0x70, 0x54, 0x79, 0x70, 0x65, 0x1a, 0x3f, 0x0a, 0x11, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xe3, 0x01, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x74, 0x61, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x03, 0x52, 0x05, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x12, 0x51, 0x0a, 0x0d, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x74, 0x61, 0x73, 0x2e, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0c, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x1a, 0x3f, 0x0a, 0x11, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xb4, 0x01, 0x0a,
	0x1d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x74, 0x61,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c,
	0x0a, 0x08, 0x65, 0x72, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x45, 0x72, 0x72, 0x43,
	0x6f, 0x64, 0x65, 0x52, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x48, 0x0a, 0x12,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6d, 0x65, 0x74,
	0x61, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d,
	0x65, 0x74, 0x61, 0x73, 0x52, 0x10, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x4d, 0x65, 0x74, 0x61, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6c, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x49, 0x64, 0x22, 0xb6, 0x01, 0x0a, 0x11, 0x45, 0x6b, 0x76, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x76,
	0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x12, 0x29, 0x0a,
	0x07, 0x6f, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x4f, 0x70, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x06, 0x6f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6d, 0x64, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6d, 0x64,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x22, 0x5e, 0x0a, 0x12,
	0x45, 0x6b, 0x76, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x76, 0x61, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x72, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x2a, 0xfe, 0x03, 0x0a,
	0x07, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x4e, 0x4f, 0x5f, 0x45,
	0x52, 0x52, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x4d, 0x45, 0x54, 0x41, 0x5f, 0x53, 0x45, 0x52,
	0x56, 0x45, 0x52, 0x5f, 0x44, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x10, 0x01, 0x12, 0x13,
	0x0a, 0x0f, 0x46, 0x49, 0x4c, 0x45, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x53, 0x5f, 0x45, 0x52,
	0x52, 0x10, 0x02, 0x12, 0x15, 0x0a, 0x11, 0x46, 0x49, 0x4c, 0x45, 0x5f, 0x44, 0x4f, 0x57, 0x4e,
	0x4c, 0x4f, 0x41, 0x44, 0x5f, 0x45, 0x52, 0x52, 0x10, 0x03, 0x12, 0x14, 0x0a, 0x10, 0x57, 0x52,
	0x4f, 0x4e, 0x47, 0x5f, 0x4c, 0x45, 0x41, 0x44, 0x45, 0x52, 0x5f, 0x45, 0x52, 0x52, 0x10, 0x04,
	0x12, 0x25, 0x0a, 0x21, 0x4d, 0x41, 0x52, 0x53, 0x48, 0x41, 0x4c, 0x5f, 0x53, 0x45, 0x52, 0x56,
	0x45, 0x52, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x4d, 0x45, 0x54, 0x41, 0x5f, 0x52, 0x45,
	0x51, 0x5f, 0x45, 0x52, 0x52, 0x10, 0x05, 0x12, 0x18, 0x0a, 0x14, 0x52, 0x50, 0x43, 0x5f, 0x43,
	0x41, 0x4c, 0x4c, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x4f, 0x55, 0x54, 0x5f, 0x45, 0x52, 0x52, 0x10,
	0x06, 0x12, 0x19, 0x0a, 0x15, 0x50, 0x55, 0x54, 0x5f, 0x42, 0x55, 0x43, 0x4b, 0x45, 0x54, 0x5f,
	0x54, 0x4f, 0x5f, 0x45, 0x4e, 0x47, 0x5f, 0x45, 0x52, 0x52, 0x10, 0x07, 0x12, 0x1b, 0x0a, 0x17,
	0x44, 0x45, 0x4c, 0x5f, 0x42, 0x55, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x46, 0x52, 0x4f, 0x4d, 0x5f,
	0x45, 0x4e, 0x47, 0x5f, 0x45, 0x52, 0x52, 0x10, 0x08, 0x12, 0x1e, 0x0a, 0x1a, 0x41, 0x50, 0x50,
	0x4c, 0x59, 0x5f, 0x4a, 0x4f, 0x49, 0x4e, 0x5f, 0x54, 0x4f, 0x44, 0x4f, 0x5f, 0x54, 0x4f, 0x5f,
	0x53, 0x54, 0x4d, 0x5f, 0x45, 0x52, 0x52, 0x10, 0x09, 0x12, 0x1d, 0x0a, 0x19, 0x41, 0x50, 0x50,
	0x4c, 0x59, 0x5f, 0x51, 0x55, 0x45, 0x52, 0x59, 0x5f, 0x54, 0x4f, 0x50, 0x4f, 0x5f, 0x43, 0x4f,
	0x4e, 0x46, 0x5f, 0x45, 0x52, 0x52, 0x10, 0x0a, 0x12, 0x1f, 0x0a, 0x1b, 0x41, 0x50, 0x50, 0x4c,
	0x59, 0x5f, 0x4c, 0x45, 0x41, 0x56, 0x45, 0x5f, 0x54, 0x4f, 0x44, 0x4f, 0x5f, 0x54, 0x4f, 0x5f,
	0x53, 0x54, 0x4d, 0x5f, 0x45, 0x52, 0x52, 0x10, 0x0b, 0x12, 0x1e, 0x0a, 0x1a, 0x50, 0x55, 0x54,
	0x5f, 0x4f, 0x42, 0x4a, 0x45, 0x43, 0x54, 0x5f, 0x4d, 0x45, 0x54, 0x41, 0x5f, 0x54, 0x4f, 0x5f,
	0x45, 0x4e, 0x47, 0x5f, 0x45, 0x52, 0x52, 0x10, 0x0c, 0x12, 0x20, 0x0a, 0x1c, 0x47, 0x45, 0x54,
	0x5f, 0x4f, 0x42, 0x4a, 0x45, 0x43, 0x54, 0x5f, 0x4d, 0x45, 0x54, 0x41, 0x5f, 0x46, 0x52, 0x4f,
	0x4d, 0x5f, 0x45, 0x4e, 0x47, 0x5f, 0x45, 0x52, 0x52, 0x10, 0x0d, 0x12, 0x18, 0x0a, 0x14, 0x57,
	0x52, 0x49, 0x54, 0x45, 0x5f, 0x46, 0x49, 0x4c, 0x45, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x5f,
	0x45, 0x52, 0x52, 0x10, 0x0e, 0x12, 0x17, 0x0a, 0x13, 0x52, 0x45, 0x41, 0x44, 0x5f, 0x46, 0x49,
	0x4c, 0x45, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x5f, 0x45, 0x52, 0x52, 0x10, 0x0f, 0x12, 0x16,
	0x0a, 0x12, 0x4b, 0x45, 0x59, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x53,
	0x5f, 0x45, 0x52, 0x52, 0x10, 0x10, 0x12, 0x13, 0x0a, 0x0f, 0x57, 0x52, 0x49, 0x54, 0x45, 0x5f,
	0x54, 0x4f, 0x5f, 0x44, 0x42, 0x5f, 0x45, 0x52, 0x52, 0x10, 0x11, 0x12, 0x10, 0x0a, 0x0c, 0x55,
	0x4e, 0x45, 0x58, 0x50, 0x45, 0x43, 0x54, 0x5f, 0x45, 0x52, 0x52, 0x10, 0x12, 0x2a, 0xf9, 0x01,
	0x0a, 0x1b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x4d, 0x65, 0x74, 0x61, 0x4f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a,
	0x14, 0x4f, 0x50, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x45, 0x52, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50,
	0x5f, 0x4a, 0x4f, 0x49, 0x4e, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x4f, 0x50, 0x5f, 0x53, 0x45,
	0x52, 0x56, 0x45, 0x52, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x4c, 0x45, 0x41, 0x56, 0x45,
	0x10, 0x01, 0x12, 0x19, 0x0a, 0x15, 0x4f, 0x50, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x45, 0x52, 0x5f,
	0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x51, 0x55, 0x45, 0x52, 0x59, 0x10, 0x02, 0x12, 0x15, 0x0a,
	0x11, 0x4f, 0x50, 0x5f, 0x4f, 0x53, 0x53, 0x5f, 0x42, 0x55, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x41,
	0x44, 0x44, 0x10, 0x03, 0x12, 0x15, 0x0a, 0x11, 0x4f, 0x50, 0x5f, 0x4f, 0x53, 0x53, 0x5f, 0x42,
	0x55, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x44, 0x45, 0x4c, 0x10, 0x04, 0x12, 0x16, 0x0a, 0x12, 0x4f,
	0x50, 0x5f, 0x4f, 0x53, 0x53, 0x5f, 0x42, 0x55, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x4c, 0x49, 0x53,
	0x54, 0x10, 0x05, 0x12, 0x15, 0x0a, 0x11, 0x4f, 0x50, 0x5f, 0x4f, 0x53, 0x53, 0x5f, 0x4f, 0x42,
	0x4a, 0x45, 0x43, 0x54, 0x5f, 0x50, 0x55, 0x54, 0x10, 0x06, 0x12, 0x15, 0x0a, 0x11, 0x4f, 0x50,
	0x5f, 0x4f, 0x53, 0x53, 0x5f, 0x4f, 0x42, 0x4a, 0x45, 0x43, 0x54, 0x5f, 0x47, 0x45, 0x54, 0x10,
	0x07, 0x12, 0x16, 0x0a, 0x12, 0x4f, 0x50, 0x5f, 0x4f, 0x53, 0x53, 0x5f, 0x4f, 0x42, 0x4a, 0x45,
	0x43, 0x54, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x10, 0x08, 0x2a, 0x3c, 0x0a, 0x06, 0x4f, 0x70, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x4f, 0x50, 0x5f, 0x50, 0x55, 0x54, 0x10, 0x00, 0x12,
	0x0d, 0x0a, 0x09, 0x4f, 0x50, 0x5f, 0x41, 0x50, 0x50, 0x45, 0x4e, 0x44, 0x10, 0x01, 0x12, 0x0a,
	0x0a, 0x06, 0x4f, 0x50, 0x5f, 0x47, 0x45, 0x54, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x4f, 0x50,
	0x5f, 0x53, 0x43, 0x41, 0x4e, 0x10, 0x03, 0x32, 0x71, 0x0a, 0x0b, 0x4d, 0x65, 0x74, 0x61, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x62, 0x0a, 0x0f, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4d, 0x65, 0x74, 0x61, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x27, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x74, 0x61, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x54, 0x0a, 0x0a, 0x45, 0x6b,
	0x76, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x46, 0x0a, 0x09, 0x44, 0x6f, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x45, 0x6b, 0x76, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x45, 0x6b,
	0x76, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x42, 0x0d, 0x5a, 0x0b, 0x2e, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_wellwood_proto_rawDescOnce sync.Once
	file_wellwood_proto_rawDescData = file_wellwood_proto_rawDesc
)

func file_wellwood_proto_rawDescGZIP() []byte {
	file_wellwood_proto_rawDescOnce.Do(func() {
		file_wellwood_proto_rawDescData = protoimpl.X.CompressGZIP(file_wellwood_proto_rawDescData)
	})
	return file_wellwood_proto_rawDescData
}

var file_wellwood_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_wellwood_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_wellwood_proto_goTypes = []interface{}{
	(ErrCode)(0),                          // 0: protocol.ErrCode
	(ConfigServerGroupMetaOpType)(0),      // 1: protocol.ConfigServerGroupMetaOpType
	(OpType)(0),                           // 2: protocol.OpType
	(*ServerGroupMetaConfigRequest)(nil),  // 3: protocol.ServerGroupMetaConfigRequest
	(*ServerGroupMetas)(nil),              // 4: protocol.ServerGroupMetas
	(*ServerGroupMetaConfigResponse)(nil), // 5: protocol.ServerGroupMetaConfigResponse
	(*EkvCommandRequest)(nil),             // 6: protocol.EkvCommandRequest
	(*EkvCommandResponse)(nil),            // 7: protocol.EkvCommandResponse
	nil,                                   // 8: protocol.ServerGroupMetaConfigRequest.ServerGroupsEntry
	nil,                                   // 9: protocol.ServerGroupMetas.ServerGroupsEntry
}
var file_wellwood_proto_depIdxs = []int32{
	8, // 0: protocol.ServerGroupMetaConfigRequest.server_groups:type_name -> protocol.ServerGroupMetaConfigRequest.ServerGroupsEntry
	1, // 1: protocol.ServerGroupMetaConfigRequest.op_type:type_name -> protocol.ConfigServerGroupMetaOpType
	9, // 2: protocol.ServerGroupMetas.server_groups:type_name -> protocol.ServerGroupMetas.ServerGroupsEntry
	0, // 3: protocol.ServerGroupMetaConfigResponse.err_code:type_name -> protocol.ErrCode
	4, // 4: protocol.ServerGroupMetaConfigResponse.server_group_metas:type_name -> protocol.ServerGroupMetas
	2, // 5: protocol.EkvCommandRequest.op_type:type_name -> protocol.OpType
	3, // 6: protocol.MetaService.ServerGroupMeta:input_type -> protocol.ServerGroupMetaConfigRequest
	6, // 7: protocol.EkvService.DoCommand:input_type -> protocol.EkvCommandRequest
	5, // 8: protocol.MetaService.ServerGroupMeta:output_type -> protocol.ServerGroupMetaConfigResponse
	7, // 9: protocol.EkvService.DoCommand:output_type -> protocol.EkvCommandResponse
	8, // [8:10] is the sub-list for method output_type
	6, // [6:8] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_wellwood_proto_init() }
func file_wellwood_proto_init() {
	if File_wellwood_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_wellwood_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerGroupMetaConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wellwood_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerGroupMetas); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wellwood_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerGroupMetaConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wellwood_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EkvCommandRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wellwood_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EkvCommandResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_wellwood_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_wellwood_proto_goTypes,
		DependencyIndexes: file_wellwood_proto_depIdxs,
		EnumInfos:         file_wellwood_proto_enumTypes,
		MessageInfos:      file_wellwood_proto_msgTypes,
	}.Build()
	File_wellwood_proto = out.File
	file_wellwood_proto_rawDesc = nil
	file_wellwood_proto_goTypes = nil
	file_wellwood_proto_depIdxs = nil
}
